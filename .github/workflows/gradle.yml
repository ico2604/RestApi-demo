# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  DOCKER_IMAGE_NAME: demo-repo
  VERSIOM: latest
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
  DOCKER_USERNAME: hwangbosuho
  DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD}}
  EC2_HOST: ec2-15-164-250-84.ap-northeast-2.compute.amazonaws.com
  EC2_SSH_USER: ubuntu
  PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    # 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v4
    # JDK version 설정
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    # 실행 권한 부여
    - name: Change permissions for Gradle Wrapper
      run: chmod +x gradlew
      # gradle caching - 빌드 시간 향상
    # - name: Gradle Caching
    #   uses: actions/cache@v3
    #   with:
    #     path: |
    #        ~/.gradle/caches
    #        ~/.gradle/wrapper
    #     key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
    #     restore-keys: |
    #       ${{ runner.os }}-gradle-

    # yml에 숨겨진 데이터 넣기
    - name: Set up application.yml
      run: |
        mkdir ./src/main/resources 
        cd ./src/main/resources 
        touch ./application.yml 
        echo "${{ secrets.APPLICATION }}" > ./application.yml
      shell: bash
    
    - name: Gradle Clean 및 캐시 제거
      run: |
        ./gradlew clean
        rm -rf ~/.gradle

    # gradle build
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Login to Docker Hub using Access Token
      run: echo "${{ env.DOCKER_HUB_TOKEN }}" | docker login -u ${{ env.DOCKER_USERNAME }} --password-stdin
      #-p password

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag "${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.VERSIOM }}" 

  

    - name: Push the Docker image
      run: docker push ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.VERSIOM }}
      
  deploy-to-ec2:

    needs: build-and-push-docker
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_SSH_USER }}
        key: ${{ env.PRIVATE_KEY }}
        script: |
          CONTAINER_ID=$(sudo docker ps -q --filter "publish=8080-8080")

          if [ ! -z "$CONTAINER_ID" ]; then
            sudo docker stop $CONTAINER_ID
            sudo docker rm $CONTAINER_ID
          fi

          sudo docker pull ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:${{ env.VERSIOM }}
          sudo docker run -d -p 8080:8080 -e TZ=Asia/Seoul ${{ env.DOCKER_IMAGE_NAME }}:${{ env.VERSIOM }}  

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    # - name: Build with Gradle Wrapper
    #   run: ./gradlew build

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
    - name: Generate and submit dependency graph
      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
